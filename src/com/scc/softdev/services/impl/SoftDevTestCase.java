
package com.scc.softdev.services.impl;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import com.scc.softdev.services.Pair;
import com.scc.softdev.services.PairArray;
import com.scc.softdev.services.TEntityTracking;
import com.scc.softdev.services.TEntityTrackingArray;
import com.scc.softdev.services.TNewActivityArray;
import com.scc.softdev.services.TPostActivityArray;
import com.scc.softdev.services.TTestCase;
import com.scc.softdev.services.TTestCaseArray;
import com.scc.softdev.services.TTestRun;
import com.scc.softdev.services.TTestRunArray;
import com.scc.softdev.services.TTestSet;
import com.scc.softdev.services.TTestSetArray;
import com.scc.softdev.services.TTestSetSubject;
import com.scc.softdev.services.TTestSetSubjectArray;
import com.scc.softdev.services.TTestStepArray;
import com.scc.softdev.services.TTestStepRunArray;
import com.scc.softdev.services.TTransitionArray;
import com.scc.softdev.services.TTransitionReq;
import com.scc.softdev.services.UserFieldArray;
import net.java.dev.jaxb.array.LongArray;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SoftDev_TestCase", targetNamespace = "http://services.softdev.scc.com")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    com.scc.softdev.services.ObjectFactory.class,
    net.java.dev.jaxb.array.ObjectFactory.class
})
public interface SoftDevTestCase {


    /**
     * 
     * @param productId
     * @param sysOther
     * @param stTestId
     * @return
     *     returns com.scc.softdev.services.Pair
     * @throws SDException
     */
    @WebMethod(operationName = "ConvertStId2SdId")
    @WebResult(partName = "return")
    public Pair convertStId2SdId(
        @WebParam(name = "ProductId", partName = "ProductId")
        long productId,
        @WebParam(name = "SysOther", partName = "SysOther")
        String sysOther,
        @WebParam(name = "StTestId", partName = "StTestId")
        long stTestId)
        throws SDException
    ;

    /**
     * 
     * @param isSystem
     * @param productId
     * @param subjectParentId
     * @param subjectName
     * @return
     *     returns long
     * @throws SDException
     */
    @WebMethod(operationName = "GetSubjectId")
    @WebResult(partName = "return")
    public long getSubjectId(
        @WebParam(name = "ProductId", partName = "ProductId")
        long productId,
        @WebParam(name = "SubjectParentId", partName = "SubjectParentId")
        long subjectParentId,
        @WebParam(name = "SubjectName", partName = "SubjectName")
        String subjectName,
        @WebParam(name = "IsSystem", partName = "IsSystem")
        boolean isSystem)
        throws SDException
    ;

    /**
     * 
     * @param testSetId
     * @return
     *     returns com.scc.softdev.services.TTestRunArray
     * @throws SDException
     */
    @WebMethod(operationName = "GetTestSetLastRuns")
    @WebResult(partName = "return")
    public TTestRunArray getTestSetLastRuns(
        @WebParam(name = "TestSetId", partName = "TestSetId")
        long testSetId)
        throws SDException
    ;

    /**
     * 
     * @param testRunId
     * @param executionDate
     * @param stepOrderNumber
     * @param stepStatus
     * @param actualResult
     * @return
     *     returns java.lang.String
     * @throws SDException
     */
    @WebMethod(operationName = "UpdateTestRunStep")
    @WebResult(partName = "return")
    public String updateTestRunStep(
        @WebParam(name = "TestRunId", partName = "TestRunId")
        long testRunId,
        @WebParam(name = "StepOrderNumber", partName = "StepOrderNumber")
        long stepOrderNumber,
        @WebParam(name = "StepStatus", partName = "StepStatus")
        String stepStatus,
        @WebParam(name = "ActualResult", partName = "ActualResult")
        String actualResult,
        @WebParam(name = "ExecutionDate", partName = "ExecutionDate")
        XMLGregorianCalendar executionDate)
        throws SDException
    ;

    /**
     * 
     * @param testCaseId
     * @return
     *     returns com.scc.softdev.services.TTestSetArray
     */
    @WebMethod(operationName = "GetTestSetsForTestCase")
    @WebResult(partName = "return")
    public TTestSetArray getTestSetsForTestCase(
        @WebParam(name = "TestCaseId", partName = "TestCaseId")
        long testCaseId);

    /**
     * 
     * @param testSetId
     * @return
     *     returns net.java.dev.jaxb.array.LongArray
     * @throws SDException
     */
    @WebMethod(operationName = "GetTestCaseIdsByTestSet")
    @WebResult(partName = "return")
    public LongArray getTestCaseIdsByTestSet(
        @WebParam(name = "TestSetId", partName = "TestSetId")
        long testSetId)
        throws SDException
    ;

    /**
     * 
     * @param isSystem
     * @param productId
     * @return
     *     returns long
     * @throws SDException
     */
    @WebMethod(operationName = "GetMainStream")
    @WebResult(partName = "return")
    public long getMainStream(
        @WebParam(name = "ProductId", partName = "ProductId")
        long productId,
        @WebParam(name = "IsSystem", partName = "IsSystem")
        boolean isSystem)
        throws SDException
    ;

    /**
     * 
     * @param entityID
     * @return
     *     returns com.scc.softdev.services.TEntityTrackingArray
     * @throws SDException
     */
    @WebMethod(operationName = "GetTracking")
    @WebResult(partName = "return")
    public TEntityTrackingArray getTracking(
        @WebParam(name = "entityID", partName = "entityID")
        long entityID)
        throws SDException
    ;

    /**
     * 
     * @param testSetId
     * @param testCaseId
     * @return
     *     returns com.scc.softdev.services.TTestCase
     * @throws SDException
     */
    @WebMethod(operationName = "GetTestCase")
    @WebResult(partName = "return")
    public TTestCase getTestCase(
        @WebParam(name = "TestCaseId", partName = "TestCaseId")
        long testCaseId,
        @WebParam(name = "TestSetId", partName = "TestSetId")
        long testSetId)
        throws SDException
    ;

    /**
     * 
     * @param comment
     * @param arrayNewActivity
     * @param testCase
     * @return
     *     returns long
     * @throws SDException
     */
    @WebMethod(operationName = "Register")
    @WebResult(partName = "return")
    public long register(
        @WebParam(name = "TestCase", partName = "TestCase")
        TTestCase testCase,
        @WebParam(name = "comment", partName = "comment")
        String comment,
        @WebParam(name = "arrayNewActivity", partName = "arrayNewActivity")
        TNewActivityArray arrayNewActivity)
        throws SDException
    ;

    /**
     * 
     * @param testCase
     * @return
     *     returns com.scc.softdev.services.TPostActivityArray
     * @throws SDException
     */
    @WebMethod(operationName = "RegisterTestCall")
    @WebResult(partName = "return")
    public TPostActivityArray registerTestCall(
        @WebParam(name = "TestCase", partName = "TestCase")
        TTestCase testCase)
        throws SDException
    ;

    /**
     * 
     * @param testSetId
     * @param includeTestRun
     * @param testCaseIds
     * @return
     *     returns com.scc.softdev.services.TTestCaseArray
     * @throws SDException
     */
    @WebMethod(operationName = "GetTestCases")
    @WebResult(partName = "return")
    public TTestCaseArray getTestCases(
        @WebParam(name = "TestCaseIds", partName = "TestCaseIds")
        LongArray testCaseIds,
        @WebParam(name = "IncludeTestRun", partName = "IncludeTestRun")
        boolean includeTestRun,
        @WebParam(name = "TestSetId", partName = "TestSetId")
        long testSetId)
        throws SDException
    ;

    /**
     * 
     * @param testRunId
     * @return
     *     returns com.scc.softdev.services.TTestStepRunArray
     * @throws SDException
     */
    @WebMethod(operationName = "GetTestRunSteps")
    @WebResult(partName = "return")
    public TTestStepRunArray getTestRunSteps(
        @WebParam(name = "TestRunId", partName = "TestRunId")
        long testRunId)
        throws SDException
    ;

    /**
     * 
     * @param entityID
     * @return
     *     returns com.scc.softdev.services.TEntityTracking
     * @throws SDException
     */
    @WebMethod(operationName = "GetLastTracking")
    @WebResult(partName = "return")
    public TEntityTracking getLastTracking(
        @WebParam(name = "entityID", partName = "entityID")
        long entityID)
        throws SDException
    ;

    /**
     * 
     * @param testRunId
     * @return
     *     returns com.scc.softdev.services.TTestRun
     * @throws SDException
     */
    @WebMethod(operationName = "GetTestRun")
    @WebResult(partName = "return")
    public TTestRun getTestRun(
        @WebParam(name = "TestRunId", partName = "TestRunId")
        long testRunId)
        throws SDException
    ;

    /**
     * 
     * @param testCaseId
     * @return
     *     returns com.scc.softdev.services.TTestStepArray
     * @throws SDException
     */
    @WebMethod(operationName = "GetStepsForTC")
    @WebResult(partName = "return")
    public TTestStepArray getStepsForTC(
        @WebParam(name = "TestCaseId", partName = "TestCaseId")
        long testCaseId)
        throws SDException
    ;

    /**
     * 
     * @param testStepOrder
     * @param testRunId
     * @return
     *     returns com.scc.softdev.services.TTestStepRunArray
     * @throws SDException
     */
    @WebMethod(operationName = "GetTestRunStep")
    @WebResult(partName = "return")
    public TTestStepRunArray getTestRunStep(
        @WebParam(name = "TestRunId", partName = "TestRunId")
        long testRunId,
        @WebParam(name = "TestStepOrder", partName = "TestStepOrder")
        long testStepOrder)
        throws SDException
    ;

    /**
     * 
     * @param testSetId
     * @return
     *     returns com.scc.softdev.services.TTestSet
     * @throws SDException
     */
    @WebMethod(operationName = "GetTestSet")
    @WebResult(partName = "return")
    public TTestSet getTestSet(
        @WebParam(name = "TestSetId", partName = "TestSetId")
        long testSetId)
        throws SDException
    ;

    /**
     * 
     * @param transitionId
     * @param testCase
     * @return
     *     returns com.scc.softdev.services.TPostActivityArray
     * @throws SDException
     */
    @WebMethod(operationName = "PerformTransitionTestCall")
    @WebResult(partName = "return")
    public TPostActivityArray performTransitionTestCall(
        @WebParam(name = "TestCase", partName = "TestCase")
        TTestCase testCase,
        @WebParam(name = "TransitionId", partName = "TransitionId")
        long transitionId)
        throws SDException
    ;

    /**
     * 
     * @param entityID
     * @param comment
     * @return
     *     returns long
     * @throws SDException
     */
    @WebMethod(operationName = "AddComment")
    @WebResult(partName = "return")
    public long addComment(
        @WebParam(name = "entityID", partName = "entityID")
        long entityID,
        @WebParam(name = "comment", partName = "comment")
        String comment)
        throws SDException
    ;

    /**
     * 
     * @param isSystem
     * @param namePattern
     * @param productId
     * @param status
     * @return
     *     returns com.scc.softdev.services.PairArray
     * @throws SDException
     */
    @WebMethod(operationName = "GetTestSetByName")
    @WebResult(partName = "return")
    public PairArray getTestSetByName(
        @WebParam(name = "NamePattern", partName = "NamePattern")
        String namePattern,
        @WebParam(name = "ProductId", partName = "ProductId")
        long productId,
        @WebParam(name = "Status", partName = "Status")
        String status,
        @WebParam(name = "IsSystem", partName = "IsSystem")
        boolean isSystem)
        throws SDException
    ;

    /**
     * 
     * @param closeAllReqAct
     * @param transitionId
     * @param comment
     * @param arrayNewActivity
     * @param testCase
     * @return
     *     returns boolean
     * @throws SDException
     */
    @WebMethod(operationName = "PerformTransition")
    @WebResult(partName = "return")
    public boolean performTransition(
        @WebParam(name = "TestCase", partName = "TestCase")
        TTestCase testCase,
        @WebParam(name = "TransitionId", partName = "TransitionId")
        long transitionId,
        @WebParam(name = "comment", partName = "comment")
        String comment,
        @WebParam(name = "arrayNewActivity", partName = "arrayNewActivity")
        TNewActivityArray arrayNewActivity,
        @WebParam(name = "closeAllReqAct", partName = "closeAllReqAct")
        boolean closeAllReqAct)
        throws SDException
    ;

    /**
     * 
     * @param subjectId
     * @return
     *     returns com.scc.softdev.services.TTestSetSubject
     * @throws SDException
     */
    @WebMethod(operationName = "GetSubjectById")
    @WebResult(partName = "return")
    public TTestSetSubject getSubjectById(
        @WebParam(name = "SubjectId", partName = "SubjectId")
        long subjectId)
        throws SDException
    ;

    /**
     * 
     * @param testSetId
     * @param includeTestRun
     * @return
     *     returns com.scc.softdev.services.TTestCaseArray
     * @throws SDException
     */
    @WebMethod(operationName = "GetTestCasesByTestSet")
    @WebResult(partName = "return")
    public TTestCaseArray getTestCasesByTestSet(
        @WebParam(name = "TestSetId", partName = "TestSetId")
        long testSetId,
        @WebParam(name = "IncludeTestRun", partName = "IncludeTestRun")
        boolean includeTestRun)
        throws SDException
    ;

    /**
     * 
     * @param transitionId
     * @param testCaseId
     * @return
     *     returns com.scc.softdev.services.TTransitionReq
     * @throws SDException
     */
    @WebMethod(operationName = "GetTransitionReq")
    @WebResult(partName = "return")
    public TTransitionReq getTransitionReq(
        @WebParam(name = "TestCaseId", partName = "TestCaseId")
        long testCaseId,
        @WebParam(name = "TransitionId", partName = "TransitionId")
        long transitionId)
        throws SDException
    ;

    /**
     * 
     * @param isSystem
     * @param productId
     * @param subjectName
     * @return
     *     returns com.scc.softdev.services.TTestSetSubjectArray
     * @throws SDException
     */
    @WebMethod(operationName = "GetSubjectByName")
    @WebResult(partName = "return")
    public TTestSetSubjectArray getSubjectByName(
        @WebParam(name = "ProductId", partName = "ProductId")
        long productId,
        @WebParam(name = "IsSystem", partName = "IsSystem")
        boolean isSystem,
        @WebParam(name = "SubjectName", partName = "SubjectName")
        String subjectName)
        throws SDException
    ;

    /**
     * 
     * @param testRunId
     * @param stepId
     * @param executionDate
     * @param stepStatus
     * @param actualResult
     * @return
     *     returns java.lang.String
     * @throws SDException
     */
    @WebMethod(operationName = "UpdateTestRunStepByStepId")
    @WebResult(partName = "return")
    public String updateTestRunStepByStepId(
        @WebParam(name = "TestRunId", partName = "TestRunId")
        long testRunId,
        @WebParam(name = "StepId", partName = "StepId")
        long stepId,
        @WebParam(name = "StepStatus", partName = "StepStatus")
        String stepStatus,
        @WebParam(name = "ActualResult", partName = "ActualResult")
        String actualResult,
        @WebParam(name = "ExecutionDate", partName = "ExecutionDate")
        XMLGregorianCalendar executionDate)
        throws SDException
    ;

    /**
     * 
     * @param testSetId
     * @param getLastRunOnly
     * @param testCaseId
     * @return
     *     returns com.scc.softdev.services.TTestRunArray
     * @throws SDException
     */
    @WebMethod(operationName = "GetRunsForTC")
    @WebResult(partName = "return")
    public TTestRunArray getRunsForTC(
        @WebParam(name = "TestCaseId", partName = "TestCaseId")
        long testCaseId,
        @WebParam(name = "TestSetId", partName = "TestSetId")
        long testSetId,
        @WebParam(name = "getLastRunOnly", partName = "getLastRunOnly")
        boolean getLastRunOnly)
        throws SDException
    ;

    /**
     * 
     * @param testRunId
     * @param userField
     * @param executionDate
     * @param host
     * @param testDuration
     * @return
     *     returns boolean
     * @throws SDException
     */
    @WebMethod(operationName = "UpdateTestRun")
    @WebResult(partName = "return")
    public boolean updateTestRun(
        @WebParam(name = "TestRunId", partName = "TestRunId")
        long testRunId,
        @WebParam(name = "UserField", partName = "UserField")
        UserFieldArray userField,
        @WebParam(name = "ExecutionDate", partName = "ExecutionDate")
        XMLGregorianCalendar executionDate,
        @WebParam(name = "TestDuration", partName = "TestDuration")
        long testDuration,
        @WebParam(name = "Host", partName = "Host")
        String host)
        throws SDException
    ;

    /**
     * 
     * @param testCaseUFI
     * @return
     *     returns com.scc.softdev.services.TTestCase
     * @throws SDException
     */
    @WebMethod(operationName = "GetTestCaseByUFI")
    @WebResult(partName = "return")
    public TTestCase getTestCaseByUFI(
        @WebParam(name = "TestCaseUFI", partName = "TestCaseUFI")
        String testCaseUFI)
        throws SDException
    ;

    /**
     * 
     * @param arrayTestCaseId
     * @return
     *     returns com.scc.softdev.services.TTestCaseArray
     * @throws SDException
     */
    @WebMethod(operationName = "GetTestCasesById")
    @WebResult(partName = "return")
    public TTestCaseArray getTestCasesById(
        @WebParam(name = "arrayTestCaseId", partName = "arrayTestCaseId")
        LongArray arrayTestCaseId)
        throws SDException
    ;

    /**
     * 
     * @param testCaseId
     * @return
     *     returns com.scc.softdev.services.TTransitionArray
     * @throws SDException
     */
    @WebMethod(operationName = "GetAvailbleTransition")
    @WebResult(partName = "return")
    public TTransitionArray getAvailbleTransition(
        @WebParam(name = "TestCaseId", partName = "TestCaseId")
        long testCaseId)
        throws SDException
    ;

    /**
     * 
     * @param testSetId
     * @param testCaseId
     * @return
     *     returns long
     * @throws SDException
     */
    @WebMethod(operationName = "StartTestRun")
    @WebResult(partName = "return")
    public long startTestRun(
        @WebParam(name = "TestCaseId", partName = "TestCaseId")
        long testCaseId,
        @WebParam(name = "TestSetId", partName = "TestSetId")
        long testSetId)
        throws SDException
    ;

}
